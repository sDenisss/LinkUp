# Группа серверов для балансировки нагрузки
upstream backend {
    server web1:8080;    # Первый backend-сервер
    server web2:8080;    # Второй backend-сервер  
    server web3:8080;    # Третий backend-сервер
}

# HTTP сервер - редирект на HTTPS
server {
    listen 80;           # Слушать порт 80 (HTTP)
    server_name localhost; # Для запросов к localhost
    return 301 https://$host$request_uri; # Постоянный редирект на HTTPS
}

# HTTPS сервер
server {
    listen 443 ssl;      # Слушать порт 443 с SSL
    server_name localhost;

    # SSL сертификаты
    ssl_certificate /etc/nginx/ssl/certificate.crt;      # Путь к сертификату
    ssl_certificate_key /etc/nginx/ssl/private.key;      # Путь к приватному ключу

    # Обработка статических файлов
    location ~* ^/(css|js|images|fonts|lib)/ {
        alias /usr/share/nginx/html/static/;  # Базовый путь к статике
        expires 30d;                          # Кэшировать в браузере 30 дней
        add_header Cache-Control "public";    # Разрешить кэширование
        access_log off;                       # Не логировать запросы к статике
        try_files $uri $uri/ =404;            # Попытаться найти файл, иначе 404
    }

    # Проксирование на бэкенд
    location / {
        proxy_pass http://backend;            # Передать запрос в upstream группу
        proxy_set_header Host $host;          # Сохранить оригинальный Host
        proxy_set_header X-Real-IP $remote_addr; # Передать реальный IP клиента
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Цепочка прокси
        proxy_set_header X-Forwarded-Proto $scheme; # Протокол (http/https)
    }
}

# upstream backend {
#     server web1:8080;
#     server web2:8080;
#     server web3:8080;
# }

# server {
#     listen 80;
#     location / {
#         proxy_pass http://backend;
#         proxy_set_header Host $host;
#     }
# }
